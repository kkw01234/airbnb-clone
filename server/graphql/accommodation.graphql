scalar Date

type accommodation {
  id: ID!
  name: String
  address: String
  image: String
  content: String
  price: Int
  rating: Int
  host_id: String
  whole_house: Boolean
  private_room: Boolean
  hotel_room: Boolean
  multi_person_room: Boolean
  room_count: Int
  bed_count: Int
  bathroom_count: Int
  min_person: Int
  max_person: Int
  reservation: [reservation]
}
type reservation {
  id: ID!
  start_date: Date!
  end_date: Date!
  person_count: Int!
  user_id: String!
  accommodation_id: Int!
}

type Query {
  accommodations: [accommodation]
  accommodation(id: Int): accommodation
  findAccForNumberOfPerson(count: Int): [accommodation]
  findAccForPrice(min_price: Int, max_price: Int): [accommodation]
  findAccFilter(
    check_in: Date
    check_out: Date
    person: Int
    whole_house: Boolean
    private_room: Boolean
    hotel_room: Boolean
    multi_person_room: Boolean
    room_count: Int
    bed_count: Int
    bathroom_count: Int
    min_person: Int
    max_person: Int,
    low_price: Int,
    high_price: Int
  ): [accommodation]
}
type result{
    result: Boolean!
    content: String
}
type Mutation {
  createReservation(
    accommodation_id: Int
    start_date: Date
    end_date: Date
    person_count: Int
  ): reservation!
  deleteReservation(id: Int!, accommodation_id: Int!): result!
}
